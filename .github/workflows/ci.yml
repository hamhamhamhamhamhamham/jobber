name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [jobs, executor, auth]
    steps:
      # CHANGED: Removed filter: tree:0 to get full repo for Nx workspace
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # NEW CHANGED: Verify package-lock.json exists before setup-node
      - name: Verify package-lock.json
        run: |
          echo "Checking package-lock.json in root..."
          if [ ! -f package-lock.json ]; then
            echo "Error: package-lock.json not found in root!"
            exit 1
          fi
          ls -la package-lock.json

      # CHANGED: Setup Node with correct cache-dependency-path
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json
          always-auth: false
          check-latest: false

      # protoc package
      - name: Setup protoc
        uses: arduino/setup-protoc@v3.0.0

      # CHANGED: npm ci must run after setup-node to install dependencies
      - run: npm ci --legacy-peer-deps

      - uses: nrwl/nx-set-shas@v4

      # NEW CHANGED: Verify Nx workspace exists before running Nx commands
      - name: Verify Nx workspace
        run: |
          echo "Checking Nx workspace files..."
          if [ ! -f nx.json ]; then
            echo "Error: nx.json not found, check your repo structure"
            exit 1
          fi
          ls -la nx.json

      # CHANGED: nx affected should work now because full workspace is checked out
      - run: npx nx affected -t lint test build
        working-directory: ./  # NEW CHANGED: ensure commands run in root workspace

      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push Docker image
      - name: Build and push ${{ matrix.app }} image
        uses: docker/build-push-action@v5
        with:
          context: .  # root پروژه به عنوان build context
          file: ./apps/${{ matrix.app }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.app }}:latest

      # Optional Nx CI fix
      # CHANGED: This will now work because Nx workspace exists
      - run: npx nx fix-ci
        if: always()
        working-directory: ./  # NEW CHANGED: ensure nx workspace context
